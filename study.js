// study.js - Material de Estudo COMPLETO e DETALHADO
const studyMaterial = {
    "html-estrutura-basica": {
        title: "üìö HTML - Estrutura B√°sica e Tags Fundamentais",
        content: `üåê **HTML (HyperText Markup Language)**
√â a ESTRUTURA e ESQUELETO das p√°ginas web. Define o CONTE√öDO, n√£o a apar√™ncia.

üèóÔ∏è **ESTRUTURA B√ÅSICA DE UM DOCUMENTO HTML:**

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meu Site</title>
</head>
<body>
    <!-- CONTE√öDO VIS√çVEL AQUI -->
    <h1>Ol√° Mundo!</h1>
</body>
</html>

üîç **ANATOMIA DAS TAGS:**

<!-- Tag de abertura -->  <!-- Tag de fechamento -->
    <h1>                  </h1>             
          ‚¨ÜÔ∏è                ‚¨ÜÔ∏è
    Conte√∫do aqui      Mesmo nome com /

üìå **TAGS SEM√ÇNTICAS - Significado Importante:**

<header>    - Cabe√ßalho da p√°gina ou se√ß√£o
<nav>       - Menu de navega√ß√£o
<main>      - Conte√∫do principal
<section>   - Se√ß√£o de conte√∫do
<article>   - Conte√∫do independente (post, not√≠cia)
<aside>     - Conte√∫do lateral (sidebar)
<footer>    - Rodap√©

üéØ **TAGS MAIS IMPORTANTES NA PR√ÅTICA:**

<!-- LINKS - Conex√£o entre p√°ginas -->
<a href="https://exemplo.com">Texto do Link</a>

<!-- LISTAS - Organiza√ß√£o de itens -->
<ul>  <!-- Lista N√ÉO ordenada (bolinhas) -->
    <li>Item 1</li>
    <li>Item 2</li>
</ul>

<ol>  <!-- Lista ORDENADA (n√∫meros) -->
    <li>Primeiro</li>
    <li>Segundo</li>
</ol>

<!-- IMAGENS -->
<img src="foto.jpg" alt="Descri√ß√£o da imagem">

<!-- DIVIS√ïES - Containers gen√©ricos -->
<div>Bloco de conte√∫do</div>
<span>Texto inline</span>

üí° **ATRIBUTOS - Configura√ß√µes das Tags:**

<!-- Atributo href define o destino -->
<a href="contato.html" target="_blank">Contato</a>
     ‚¨ÜÔ∏è              ‚¨ÜÔ∏è
   destino       abre em nova aba

<!-- Atributos comuns -->
id="unico"           /* Identificador √öNICO */
class="grupo"        /* Classe para CSS/JS */
style="color: red;"  /* Estilo inline */
data-info="valor"    /* Dados personalizados */

üöÄ **INCLUS√ÉO DE SCRIPTS E ESTILOS:**

<!-- CSS EXTERNO (RECOMENDADO) -->
<link rel="stylesheet" href="estilos.css">

<!-- CSS INTERNO -->
<style>
    body { color: blue; }
</style>

<!-- JAVASCRIPT EXTERNO -->
<script src="script.js"></script>

<!-- JAVASCRIPT INTERNO -->
<script>
    alert("Ol√°!");
</script>

‚ö†Ô∏è **ERROS COMUNS DE INICIANTE:**
‚Ä¢ Esquecer de fechar tags
‚Ä¢ Confundir <link> (CSS) com <a> (links)
‚Ä¢ Usar m√∫ltiplos elementos com mesmo ID
‚Ä¢ Esquecer o alt em imagens

üõ†Ô∏è **EXERC√çCIO PR√ÅTICO:**
Crie uma p√°gina com:
- T√≠tulo principal
- Lista de 3 links para sites externos
- Imagem com descri√ß√£o
- Rodap√© com copyright

üéì **BOAS PR√ÅTICAS HTML5:**
1. Use tags sem√¢nticas sempre que poss√≠vel
2. Sempre inclua lang no <html>
3. Use UTF-8 para caracteres especiais
4. Mantenha a estrutura hier√°rquica correta
5. Valide seu HTML com validators`
    },

    "git-comandos": {
        title: "üõ†Ô∏è Git - Comandos Essenciais",
        content: `üìö **COMANDOS GIT MAIS USADOS:**

# BAIXAR altera√ß√µes do reposit√≥rio
git pull origin main

# ENVIAR altera√ß√µes para o reposit√≥rio  
git push origin main

# CLONAR reposit√≥rio pela primeira vez
git clone https://github.com/usuario/projeto.git

# BAIXAR mas N√ÉO integrar altera√ß√µes
git fetch origin

üéØ **DIFEREN√áA IMPORTANTE:**
git pull = git fetch + git merge  (faz ambos)
git fetch = apenas baixa (mais seguro)`
    },

    "css-cores-fundos": {
        title: "üé® CSS - Cores e Fundos",
        content: `üé® **PROPRIEDADES DE COR EM CSS:**

/* COR do TEXTO */
color: white;           /* Nome da cor */
color: #ffffff;         /* Hexadecimal */
color: rgb(255,255,255); /* RGB */

/* COR de FUNDO */
background-color: blue;
background-color: #0000ff;
background-color: rgb(0, 0, 255);

üìè **MARGIN vs PADDING:**

/* MARGIN - Espa√ßo EXTERNO */
margin: 10px;           /* Todos os lados */
margin: 10px 20px;      /* Vertical | Horizontal */

/* PADDING - Espa√ßo INTERNO */  
padding: 15px;
padding: 10px 5px 15px 20px; /* Top | Right | Bottom | Left */

üé™ **FLEXBOX - Layout Moderno:**

.container {
    display: flex;          /* ‚úÖ Ativa Flexbox */
    justify-content: center; /* Alinha horizontalmente */
    align-items: center;    /* Alinha verticalmente */
}`
    },

    "html-tags": {
        title: "üåê HTML - Tags Essenciais",
        content: `üèóÔ∏è **TAGS HTML MAIS IMPORTANTES:**

<!-- DIV - Container gen√©rico -->
<div class="box">
    Conte√∫do aqui
</div>                    <!-- ‚úÖ Fechamento correto -->

<!-- LINK entre p√°ginas -->
<a href="https://exemplo.com">Texto do Link</a>

üìù **REGRA DE FECHAMENTO:**
Sempre feche tags com </nomedatag>`
    },

    "javascript-avancado": {
        title: "‚ö° JavaScript - Conceitos Avan√ßados",
        content: `üìÑ **JSON - Troca de Dados:**

// OBJETO ‚Üí STRING JSON
let pessoa = {nome: "Ana", idade: 28};
let jsonString = JSON.stringify(pessoa);

// STRING JSON ‚Üí OBJETO
let objeto = JSON.parse('{"nome":"Jo√£o","idade":32}');

üåê **MANIPULA√á√ÉO DO DOM:**

// REMOVER elemento da p√°gina
elemento.remove();          // ‚úÖ M√©todo moderno

// REQUISI√á√ÉO HTTP GET
fetch('https://api.com/data')
    .then(response => response.json())  // ‚úÖ Converte para objeto
    .then(data => console.log(data));

‚è≥ **ASYNC/AWAIT - C√≥digo Ass√≠ncrono:**

async function buscarDados() {    // ‚úÖ Palavra-chave async
    let response = await fetch(url);
    return response.json();
}`
    },

    "licencas-software": {
        title: "üìú Licen√ßas de Software",
        content: `üéì **LICEN√áAS POPULARES:**

MIT License - ‚úÖ Gratuita, permite uso comercial e modifica√ß√µes
GPL - Gratuita, exige que derivados sejam open source
Apache - Similar √† MIT, com prote√ß√£o de patentes

üí° **PARA ESTUDANTES:**
MIT License √© a mais popular para projetos acad√™micos
e open source.`
    },

    "css-sintaxe-seletores": {
        title: "üé® CSS - Sintaxe, Seletores e Box Model",
        content: `üé® **CSS (Cascading Style Sheets)**
Controla a APAR√äNCIA visual: cores, fontes, layout, anima√ß√µes.

üìñ **SINTAXE B√ÅSICA DO CSS:**

seletor {
    propriedade: valor;
    outra-propriedade: valor;
}

/* EXEMPLO PR√ÅTICO */
.titulo {
    color: blue;
    font-size: 24px;
    margin: 10px;
}

üéØ **SELETORES - Como ENCONTRAR elementos:**

/* Por ELEMENTO (tag) */
div { 
    background: yellow; 
}

/* Por CLASSE (pode repetir) */
.botao { 
    color: white; 
}

/* Por ID (deve ser √öNICO) */
#header { 
    height: 80px; 
}

/* COMBINA√á√ïES AVAN√áADAS */
div.botao           /* <div class="botao"> */
#header .menu       /* Elemento com classe menu DENTRO do header */
div > p             /* Par√°grafos FILHOS DIRETOS de div */
a:hover             /* Quando mouse passa por cima */

üåà **SISTEMA DE CORES - 4 Formas:**

/* 1. NOMES (mais simples) */
color: red;
color: blue;

/* 2. HEXADECIMAL (mais usado) */
color: #ff0000;     /* Vermelho */
color: #27ae60;     /* Verde */
color: #000000;     /* Preto */
color: #ffffff;     /* Branco */

/* 3. RGB (Red, Green, Blue) */
color: rgb(255, 0, 0);      /* Vermelho */
color: rgb(39, 174, 96);    /* Verde */

/* 4. HSL (Hue, Saturation, Lightness) */
color: hsl(0, 100%, 50%);   /* Vermelho */

üèóÔ∏è **BOX MODEL - O Modelo da Caixa:**

[ MARGIN (externo) ]
  [ BORDER (borda) ]
    [ PADDING (interno) ]
      [ CONTE√öDO ]

üìê **PROPRIEDADES DO BOX MODEL:**

.conteudo {
    /* CONTE√öDO - Largura e Altura */
    width: 300px;
    height: 200px;
    
    /* PADDING - Espa√ßo INTERNO */
    padding: 20px;              /* Todos os lados */
    padding: 10px 20px;         /* Vertical | Horizontal */
    padding: 5px 10px 15px 20px; /* Top | Right | Bottom | Left */
    
    /* BORDER - Linha ao redor */
    border: 2px solid #000;     /* Largura | Estilo | Cor */
    border-radius: 10px;        /* Cantos arredondados */
    
    /* MARGIN - Espa√ßo EXTERNO */
    margin: 15px;
}

üé™ **ESTILOS DE BORDA:**

border: 2px solid red;      /* Linha cont√≠nua */
border: 3px dotted blue;    /* Pontilhado */
border: 1px dashed green;   /* Tracejado */
border: 4px double black;   /* Dupla */

üìè **UNIDADES DE MEDIDA:**

/* ABSOLUTAS (fixas) */
px  /* Pixels - mais comum */
pt  /* Points - impress√£o */

/* RELATIVAS (flex√≠veis) */
%   /* Porcentagem do elemento pai */
em  /* Tamanho da fonte do elemento pai */
rem /* Tamanho da fonte do elemento raiz (html) */
vw  /* Porcentagem da largura da viewport */
vh  /* Porcentagem da altura da viewport */

üöÄ **LAYOUT E POSICIONAMENTO B√ÅSICO:**

/* DISPLAY - Como o elemento se comporta */
display: block;      /* Ocupa linha inteira (div, h1, p) */
display: inline;     /* Na mesma linha (span, a, strong) */
display: inline-block; /* Linha mas com width/height */
display: none;       /* Escondido completamente */

/* POSITION - Posicionamento */
position: static;    /* Padr√£o - fluxo normal */
position: relative;  /* Relativo √† posi√ß√£o normal */
position: absolute;  /* Relativo ao elemento pai posicionado */
position: fixed;     /* Fixo na tela */

üõ†Ô∏è **EXEMPLO COMPLETO - Bot√£o Estilizado:**

.botao {
    /* CONTE√öDO */
    color: white;
    font-size: 16px;
    text-decoration: none;
    text-align: center;
    
    /* BOX MODEL */
    background: #3498db;
    padding: 12px 24px;
    border: none;
    border-radius: 6px;
    margin: 10px;
    
    /* LAYOUT */
    display: inline-block;
    cursor: pointer;
    
    /* EFEITOS */
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.botao:hover {
    background: #2980b9;
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(0,0,0,0.3);
}

üí° **DICAS IMPORTANTES:**
‚Ä¢ Use classes para estilos reutiliz√°veis
‚Ä¢ IDs apenas para elementos √∫nicos
‚Ä¢ Sempre teste em m√∫ltiplos navegadores
‚Ä¢ Use unidades relativas para responsividade
‚Ä¢ Organize propriedades por categoria

‚ö†Ô∏è **ERROS COMUNS:**
‚Ä¢ Confundir padding com margin
‚Ä¢ Usar !important sem necessidade
‚Ä¢ Esquecer do border-radius em bot√µes
‚Ä¢ N√£o testar contraste de cores`
    }
};

// ... (AS FUN√á√ïES loadStudyMaterial, showTopic, toggleStudyColumn PERMANECEM EXATAMENTE COMO ESTAVAM NO SEU C√ìDIGO ORIGINAL) ...

// Fun√ß√£o para carregar o material de estudo
function loadStudyMaterial() {
    const studyContent = document.getElementById('studyContent');
    
    if (!studyContent) {
        console.error('Elemento studyContent n√£o encontrado!');
        return;
    }
    
    // Criar menu de t√≥picos organizado por categoria
    let studyHTML = `
        <div class="topic-menu">
            <h3>üìö Material de Estudo Completo</h3>
            
            <div class="topic-category">
                <h4>üåê HTML Fundamentos</h4>
                <div class="topic-buttons">
                    <button class="topic-btn active" onclick="showTopic('html-estrutura-basica')">
                        üìö Estrutura HTML
                    </button>
                </div>
            </div>
            
            <div class="topic-category">
                <h4>üé® CSS Estiliza√ß√£o</h4>
                <div class="topic-buttons">
                    <button class="topic-btn" onclick="showTopic('css-sintaxe-seletores')">
                        üé® Sintaxe e Seletores
                    </button>
                </div>
            </div>
            
            <div class="topic-category">
                <h4>üíª JavaScript B√°sico</h4>
                <div class="topic-buttons">
                    <button class="topic-btn" onclick="showTopic('javascript-variaveis-tipos')">
                        üî§ Vari√°veis e Tipos
                    </button>
                    <button class="topic-btn" onclick="showTopic('javascript-funcoes')">
                        üéØ Fun√ß√µes
                    </button>
                </div>
            </div>
            
            <div class="topic-category">
                <h4>üîß JavaScript Intermedi√°rio</h4>
                <div class="topic-buttons">
                    <button class="topic-btn" onclick="showTopic('javascript-arrays-objetos')">
                        üìä Arrays e Objetos
                    </button>
                </div>
            </div>
            
            <div class="topic-category">
                <h4>‚ö° JavaScript Avan√ßado</h4>
                <div class="topic-buttons">
                    <button class="topic-btn" onclick="showTopic('javascript-dom-eventos')">
                        üåê DOM e Eventos
                    </button>
                    <button class="topic-btn" onclick="showTopic('javascript-avancado')">
                        üöÄ Recursos ES6+
                    </button>
                </div>
            </div>
            
            <div class="topic-category">
                <h4>üõ†Ô∏è Ferramentas</h4>
                <div class="topic-buttons">
                    <button class="topic-btn" onclick="showTopic('git-comandos')">
                        üìö Git e Comandos
                    </button>
                </div>
            </div>
        </div>
        
        <div class="topic-content" id="topicContent">
            <div class="topic-header">
                <h2>üìö HTML - Estrutura B√°sica e Tags Fundamentais</h2>
            </div>
            <div class="topic-body">
                <pre>${studyMaterial['html-estrutura-basica'].content}</pre>
            </div>
        </div>
        
        <div class="study-tips">
            <h4>üí° Dicas de Estudo:</h4>
            <ul>
                <li><strong>Comece pelo b√°sico:</strong> HTML ‚Üí CSS ‚Üí JavaScript</li>
                <li><strong>Pratique sempre:</strong> Crie pequenos projetos</li>
                <li><strong>Use este material:</strong> Consulte durante o quiz</li>
                <li><strong>N√£o decore:</strong> Entenda os conceitos</li>
            </ul>
        </div>
    `;
    
    studyContent.innerHTML = studyHTML;
    console.log('Material de estudo carregado com sucesso!');
}

// Fun√ß√£o para mostrar um t√≥pico espec√≠fico
function showTopic(topicKey) {
    const topic = studyMaterial[topicKey];
    if (!topic) {
        console.error('T√≥pico n√£o encontrado:', topicKey);
        return;
    }
    
    const topicContent = document.getElementById('topicContent');
    if (!topicContent) {
        console.error('Elemento topicContent n√£o encontrado!');
        return;
    }
    
    // Atualizar bot√µes ativos
    document.querySelectorAll('.topic-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    
    // Marcar bot√£o atual como ativo
    if (event && event.target) {
        event.target.classList.add('active');
    }
    
    // Atualizar conte√∫do
    topicContent.innerHTML = `
        <div class="topic-header">
            <h2>${topic.title}</h2>
        </div>
        <div class="topic-body">
            <pre>${topic.content}</pre>
        </div>
    `;
    
    // Rolagem suave para o topo do conte√∫do
    topicContent.scrollIntoView({ behavior: 'smooth' });
}

// Fun√ß√£o para alternar a coluna de estudo
function toggleStudyColumn() {
    const studyColumn = document.getElementById('studyColumn');
    const quizColumn = document.getElementById('quizColumn');
    const toggleBtns = document.querySelectorAll('.toggle-btn');
    
    if (!studyColumn || !quizColumn) {
        console.error('Elementos da coluna n√£o encontrados!');
        return;
    }
    
    studyColumn.classList.toggle('collapsed');
    quizColumn.classList.toggle('expanded');
    
    toggleBtns.forEach(btn => {
        if (studyColumn.classList.contains('collapsed')) {
            btn.textContent = 'üìö Material';
        } else {
            btn.textContent = '‚óÄÔ∏è Ocultar';
        }
    });
}

// Carregar o material quando a p√°gina estiver pronta
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM carregado, inicializando material de estudo...');
    loadStudyMaterial();
});

// Adicionar tamb√©m ao objeto global window para acesso via HTML
window.loadStudyMaterial = loadStudyMaterial;
window.showTopic = showTopic;
window.toggleStudyColumn = toggleStudyColumn;

console.log('Study.js carregado com sucesso! Material completo dispon√≠vel.');